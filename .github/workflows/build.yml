name: build

on: [push]

jobs:
  coding-standards:
    name: Coding Standards Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: locked
          composer-options: --no-ansi --no-interaction --no-progress
      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --diff --dry-run -v
  tests:
    name: Tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system:
          - ubuntu-latest
        php-versions:
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: dbunit
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_mysql, libxml, dom
          coverage: none
      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: locked
          composer-options: --no-ansi --no-interaction --no-progress
      - name: Run PHPUnit
        run: vendor/bin/phpunit --colors=always
        env:
          MYSQL_DB_PORT: ${{ job.services.mysql.ports[3306] }}
  coverage:
    name: Tests coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: pcov
      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: locked
          composer-options: --no-ansi --no-interaction --no-progress
      - name: Run PHPUnit with coverage
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --testsuite=unit --colors=always --coverage-clover=build/logs/clover.xml
      - name: Upload coverage report
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: vendor/bin/php-coveralls -v
